
package proxy;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CalculService", targetNamespace = "http://ws.example.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CalculService {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "somme", targetNamespace = "http://ws.example.org/", className = "proxy.Somme")
    @ResponseWrapper(localName = "sommeResponse", targetNamespace = "http://ws.example.org/", className = "proxy.SommeResponse")
    @Action(input = "http://ws.example.org/CalculService/sommeRequest", output = "http://ws.example.org/CalculService/sommeResponse")
    public int somme(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "soustraction", targetNamespace = "http://ws.example.org/", className = "proxy.Soustraction")
    @ResponseWrapper(localName = "soustractionResponse", targetNamespace = "http://ws.example.org/", className = "proxy.SoustractionResponse")
    @Action(input = "http://ws.example.org/CalculService/soustractionRequest", output = "http://ws.example.org/CalculService/soustractionResponse")
    public int soustraction(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiplication", targetNamespace = "http://ws.example.org/", className = "proxy.Multiplication")
    @ResponseWrapper(localName = "multiplicationResponse", targetNamespace = "http://ws.example.org/", className = "proxy.MultiplicationResponse")
    @Action(input = "http://ws.example.org/CalculService/multiplicationRequest", output = "http://ws.example.org/CalculService/multiplicationResponse")
    public long multiplication(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        long arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "inverser", targetNamespace = "http://ws.example.org/", className = "proxy.Inverser")
    @ResponseWrapper(localName = "inverserResponse", targetNamespace = "http://ws.example.org/", className = "proxy.InverserResponse")
    @Action(input = "http://ws.example.org/CalculService/inverserRequest", output = "http://ws.example.org/CalculService/inverserResponse")
    public int inverser(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
